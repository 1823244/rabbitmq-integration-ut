// Данная обработка обеспечивает транспорт

Перем ИмяСобытияЖР;

#Область Версия_1_описание

// 2023-11-15  Используется эта версия

// Версия 1

// объекты для выгрузки выбираются из плана обмена через метод
//	Выборка = ПланыОбмена.ВыбратьИзменения(Узел,1);

#КонецОбласти 	


#Область Версия_2_описание

// 2023-11-15  Это - прототип. Рабочий. См. раздел "Использование"

// Версия 2

// Объекты для выгрузки выбираются одним запросом - в одном запросе один вид метаданных.
// План обмена используется, как отбор (через INNER JOIN с таблицей изменений).
// Запрос для выбора объектов лежит в плагинах.

//		ИНСТРУКЦИЯ - для ВЕРСИИ 2 - по добавлению нового объекта метаданных

//	1. В метод ВидыМетаданныхДляВыгрузки() добавить новый вид объектов
//	2. В метод ПолучитьИзменения_ПоВидуМетаданных() добавить вызов нового метода получения выборки
//	3. Реализовать новый метод получения выборки для п.2 (пример - ПолучитьИзменения_Справочник_Номенклатура())

//		Использование

// Для использования этой версии надо вносить изменения в плагины.
// Сейчас исправлен только один - для выгрузки спр Склады.
// Но! Эти исправления отключены, т.к. вернулись к версии 1.
// Они отмечены комментариями "Версия2", в комментариях написано что надо сделать.

#КонецОбласти 	




Перем Плагины; // структура?
Перем КэшОбъектовПлагинов; //ТЗ
Перем мИмяТочкиОбмена;
Перем мУзел;



#Область ПодключениеОбработкиКБСП

Функция СведенияОВнешнейОбработке() Экспорт

	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();

	ПараметрыРегистрации.Вставить("Вид",ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка());
	ПараметрыРегистрации.Вставить("Версия","1.5");
	//ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование","Выгрузка из УТ");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация","Выгрузка из УТ");
	ПараметрыРегистрации.Вставить("ВерсияБСП", "3.1.5.180"); // ОБЯЗАТЕЛЬНО!!! //(https://forum.infostart.ru/forum9/topic179193/)
	//ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Открыть форму : Экспорт из УТ","ЭкпортИзУТФорма",ТипКоманды, Ложь) ;
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Выполнить экспорт из УТ","ЭкспортИзУТ",ТипКоманды, Ложь) ;
	
	ТипКоманды = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	ДобавитьКоманду(ПараметрыРегистрации.Команды, "Выполнить экспорт. Версия 2","ЭкспортИзУТВерсия2",ТипКоманды, Ложь) ;

	Возврат ПараметрыРегистрации;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")

	//ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	//ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	//ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
//           ** Использование - Строка - тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>.
//               В комментариях к этим функциям также даны шаблоны процедур-обработчиков команд.

	НоваяКоманда = ТаблицаКоманд.Добавить() ;
	НоваяКоманда.Представление = Представление ;
	НоваяКоманда.Идентификатор = Идентификатор ;
	НоваяКоманда.Использование = Использование ;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение ;
	НоваяКоманда.Модификатор = Модификатор ;
КонецПроцедуры

// Интерфейс для запуска логики обработки.
Процедура ВыполнитьКоманду(ИмяКоманды, ПараметрыВыполнения) Экспорт
	
	Если ИмяКоманды = "ЭкспортИзУТ" Тогда
		ВыполнитьЭкспорт(ПараметрыВыполнения);
	ИначеЕсли ИмяКоманды = "ЭкспортИзУТВерсия2" Тогда
		ВыполнитьЭкспорт_Версия_2();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 	


#Область Версия1


// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ВыполнитьЭкспорт(ПараметрыВыполнения = Неопределено) Экспорт

	ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,,
		"Запуск" );
	
	ВремяНач = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована Тогда
		
		ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Ошибка,,,
			"Экспорт не выполнен, т.к. ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = Истина" );
		
		Возврат;
		
	КонецЕсли;
	
	ИмяТочкиОбмена = "UT";
	
	//Если Не ЗначениеЗаполнено(ИмяТочкиОбмена) Тогда
	//	ВызватьИсключение "Константа ксп_ТочкаОбмена не установлена!";
	//КонецЕсли;

	Узел = Константы.ксп_УзелОбменаЕРП.Получить();
	Если Не ЗначениеЗаполнено(Узел) Тогда
		ВызватьИсключение "Константа ксп_УзелОбменаRabbit не установлена!";
	КонецЕсли;
	


	Плагины(); //заполняем кэш плагинов
	
	Клиент = PinkRabbit.ПолучитьКлиента();
	
	
	Выборка = ПланыОбмена.ВыбратьИзменения(Узел,1);
	Пока Выборка.Следующий() Цикл

		Объект = Выборка.Получить();
		ДанныеСсылка = Объект.Ссылка;

		Если ТипЗнч(Объект) = Тип("УдалениеОбъекта") Тогда
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР, УровеньЖурналаРегистрации.Предупреждение,,ДанныеСсылка,
				"Тип данных <УдалениеОбъекта> не обрабатывается и будет пропущен!");
			Продолжить;
		КонецЕсли;
		
		ПредставлениеОбъекта = Строка(Объект);
		
		ТипОбъекта = Объект.Метаданные().ПолноеИмя();
			
		// найти плагин
		Плагин = Неопределено;
		Успешно = НайтиПлагин(ТипОбъекта, Плагин);
		Если НЕ Успешно Тогда
			
			// а если объектов будет миллион?
			//ЗаписьЖурналаРегистрации("ЕНС", УровеньЖурналаРегистрации.Предупреждение, ,, 
			//	"Для типа данных <"+Строка(ТипОбъекта)+"> нет доп. обработки формирования json для экспорта в RabbitMQ!");
			
			Продолжить;
		КонецЕсли;
// -------------------------------------------- БЛОКИРОВКА
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить(ТипОбъекта);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		ЭлементБлокировки.УстановитьЗначение("Ссылка", Объект.Ссылка);

		НачатьТранзакцию();
		
		Попытка
			Блокировка.Заблокировать();
		Исключение
			т=ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Информация,,Объект.Ссылка,
				"Объект не выгружен! Ошибка блокировки объекта <"+ПредставлениеОбъекта+">. Подробности: "+т);
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
// -------------------------------------------- БЛОКИРОВКА
		
		Попытка
			json = Плагин.ВыгрузитьОбъект(Объект);
			
			// для отладки
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,ДанныеСсылка,
				"Сформирован json для объекта <"+ПредставлениеОбъекта+">");

		Исключение
			т=ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Ошибка,Объект.Метаданные(),ДанныеСсылка,
				"Ошибка формирования json для объекта <"+ПредставлениеОбъекта+">. Подробности: "+т);
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;
		
		_типОбъекта = ТипЗнч(Объект.Ссылка);	
		RoutingKey = "";
		Если Документы.ТипВсеСсылки().СодержитТип(_типОбъекта) Тогда
			RoutingKey = "doc";
		ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(_типОбъекта) 
			ИЛИ Перечисления.ТипВсеСсылки().СодержитТип(_типОбъекта)
			ИЛИ ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(_типОбъекта) Тогда
			RoutingKey = "static";
		КонецЕсли;
		
			// для отладки
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,ДанныеСсылка,
				"Определен routing key для объекта <"+ПредставлениеОбъекта+">: "+RoutingKey);
		
		
		УспешноОпубликован = Ложь;
		Попытка
			Клиент.BasicPublish(ИмяТочкиОбмена, RoutingKey, json, 0, Ложь);
			УспешноОпубликован = Истина;

			// для отладки
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,ДанныеСсылка,
				"Выполнена публикация для объекта <"+ПредставлениеОбъекта+">");

		Исключение
	        т = Клиент.GetLastError();
			тт = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Ошибка,,ДанныеСсылка,	
				"Ошибка публикации объекта <"+ПредставлениеОбъекта+">. Ошибка PinkRabbitMQ: "+т+символы.ПС+
				"Ошибка 1С: "+тт);
			ОтменитьТранзакцию();
			Продолжить;
		КонецПопытки;

		Если УспешноОпубликован = Истина Тогда
			Попытка
				ПланыОбмена.УдалитьРегистрациюИзменений(Узел, Объект);			

			// для отладки
			ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,ДанныеСсылка,
				"Удалена регистрация в плане обмена для объекта <"+ПредставлениеОбъекта+">");
				
			Исключение
				т=ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Ошибка,,,
					"Не удалось удалить регистрацию объекта <"+Строка(ПредставлениеОбъекта)+">. Подробности: "+т);
				ОтменитьТранзакцию();
				Продолжить;
			КонецПопытки;
		КонецЕсли;  
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	Клиент = Неопределено;
	
	ВремяКон = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Длительность = ВремяКон - ВремяНач;
	ЗаписьЖурналаРегистрации(ИмяСобытияЖР,УровеньЖурналаРегистрации.Информация,,,
		"Завершение. Длительность = " + строка(Длительность) + " мс" );
	
КонецПроцедуры


#КонецОбласти 	


#Область Версия2_ЭтоПрототип_НеИспользуетсяВПроде

// Оркестратор. Формирует список видо объектов для выгрузки и вызывает метод экспорта
Процедура ВыполнитьЭкспорт_Версия_2(ПараметрыВыполнения = Неопределено) Экспорт

	ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Информация,,,
		"Запуск" );
	
	ВремяНач = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Если ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована Тогда
		
		ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Ошибка,,,
			"Экспорт не выполнен, т.к. ПараметрыСеанса.РаботаСВнешнимиРесурсамиЗаблокирована = Истина" );
		
		Возврат;
		
	КонецЕсли;
	
	мИмяТочкиОбмена = Константы.ксп_ТочкаОбмена.Получить().Наименование;
	
	Если Не ЗначениеЗаполнено(мИмяТочкиОбмена) Тогда
		ВызватьИсключение "Константа ксп_ТочкаОбмена не установлена!";
	КонецЕсли;

	мУзел = Константы.ксп_УзелОбменаRabbit.Получить();
	Если Не ЗначениеЗаполнено(мУзел) Тогда
		ВызватьИсключение "Константа ксп_УзелОбменаRabbit не установлена!";
	КонецЕсли;
	
  	Плагины(); //заполняем кэш плагинов
	
	ВидыМетаданныхДляВыгрузки = ВидыМетаданныхДляВыгрузки();//массив строк вида Справочник.Номенклатура

	Для каждого ТипОбъекта Из ВидыМетаданныхДляВыгрузки Цикл
		
		ВыгрузитьОбъектыМетаданныхОдногоВида(ТипОбъекта);
		
	КонецЦикла;	
	
	ВремяКон = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Длительность = ВремяКон - ВремяНач;
	ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Информация,,,
		"Завершение. Длительность = " + строка(Длительность) + " мс" );	
	
КонецПроцедуры


// Исполнитель. Публикует в шину объекты одного вида
//
// Параметры:
//	ТипОбъекта - строка - пример: "Справочник.Номенклатура" 
//
Процедура ВыгрузитьОбъектыМетаданныхОдногоВида(ТипОбъекта)
	
	// найти плагин
	Плагин = Неопределено;
	Успешно = НайтиПлагин(ТипОбъекта, Плагин);
	Если НЕ Успешно Тогда
		
		// а если объектов будет миллион?
		//ЗаписьЖурналаРегистрации("ЕНС", УровеньЖурналаРегистрации.Предупреждение, ,, 
		//	"Для типа данных <"+Строка(ТипОбъекта)+"> нет доп. обработки формирования json для экспорта в RabbitMQ!");
		ЗаписьЖурналаРегистрации("Экспорт_из_УТ", УровеньЖурналаРегистрации.Предупреждение, ,,
			"Для типа объектов экспорт версии 2 не реализован: "+Строка(ТипОбъекта));
		
		Возврат;
	КонецЕсли;

	РезультатЗапроса = Плагин.ПолучитьОбъектыДляВыгрузки(мУзел);	
	
	Если РезультатЗапроса = Неопределено ИЛИ РезультатЗапроса.Пустой() Тогда
		ЗаписьЖурналаРегистрации("Экспорт_из_УТ", УровеньЖурналаРегистрации.Предупреждение, ,,
			"Для типа объектов экспорт версии 2 не нашел зарегистрированных данных: "+Строка(ТипОбъекта));
		Возврат;
	КонецЕсли;
	
	Клиент = PinkRabbit.ПолучитьКлиента();
		
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Объект = Выборка;
		
		// доделать
		//Если ТипЗнч(Объект) = Тип("УдалениеОбъекта") Тогда
		//	ЗаписьЖурналаРегистрации("Экспорт_из_ЕРП", УровеньЖурналаРегистрации.Предупреждение,,,
		//		"Тип данных <УдалениеОбъекта> не обрабатывается и будет пропущен!");
		//	Продолжить;
		//КонецЕсли;
		
		ПредставлениеОбъекта = Строка(Объект.Ссылка);        
		
			
		Попытка
			json = Плагин.ВыгрузитьОбъект(Объект);
		Исключение
			т=ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Ошибка,,Объект.Ссылка,
				"Ошибка формирования json для объекта <"+ПредставлениеОбъекта+">. Подробности: "+т);
			Продолжить;
		КонецПопытки;
		
		RoutingKey = Плагин.getRoutingKey();
		//RoutingKey = "";
		//Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.Ссылка)) Тогда
		//	RoutingKey = "doc";
		//	
		//ИначеЕсли Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.Ссылка)) 
		//	ИЛИ Перечисления.ТипВсеСсылки().СодержитТип(ТипЗнч(Объект.Ссылка)) Тогда
		//	
		//	RoutingKey = "static";
		//КонецЕсли;
		
		УспешноОпубликован = Ложь;
		Попытка
			Клиент.BasicPublish(мИмяТочкиОбмена, RoutingKey, json, 0, Ложь);
			УспешноОпубликован = Истина;
		Исключение
	        т = Клиент.GetLastError();
			тт = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Ошибка,,Объект.Ссылка,	
				"Ошибка публикации объекта <"+ПредставлениеОбъекта+">. "+
				"Ошибка PinkRabbitMQ: "+т+символы.ПС+
				"Ошибка 1С: "+тт);
			Продолжить;
		КонецПопытки;

		Если УспешноОпубликован = Истина Тогда
			Попытка
				ПланыОбмена.УдалитьРегистрациюИзменений(мУзел, Объект.Ссылка);			
			Исключение
				т=ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
				ЗаписьЖурналаРегистрации("Экспорт_в_RabbitMQ",УровеньЖурналаРегистрации.Ошибка,,Объект.Ссылка,
					"Не удалось удалить регистрацию объекта <"+Строка(ПредставлениеОбъекта)+">. (Объект выгружен успеншо). Подробности: "+т);
				Продолжить;
			КонецПопытки;
		КонецЕсли;
		
	КонецЦикла;
	
	Клиент = Неопределено;
	
		
КонецПроцедуры


// Выбирает, какой метод вызывать для получения выборки в зависимости от вида метаданных
//
// Параметры:
//	ТипОбъекта 	- строка - пример: "Справочник.Номенклатура"
//
// Возвращаемое значение:
//	Тип: выборка из рез запроса
//
Функция ПолучитьИзменения_ПоВидуМетаданных(ТипОбъекта)
	
	Если ТипОбъекта = "Документ.РеализацияТоваровУслуг" Тогда
		Возврат ПолучитьИзменения_Документ_РеализацияТоваровУслуг();
		
	ИначеЕсли ТипОбъекта = "Документ.ВозвратТоваровОтКлиента" Тогда
		Возврат ПолучитьИзменения_Документ_ВозвратТоваровОтКлиента();
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции


// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: массив
//
Функция ВидыМетаданныхДляВыгрузки() Экспорт
	
	_м = Новый Массив;
	_м.Добавить("Документ.ВозвратТоваровОтКлиента");
	_м.Добавить("Документ.РеализацияТоваровУслуг");

	
	Возврат _м;
	
КонецФункции


// Выбирает зарегистрированные к обмену объекты
//
// Параметры:
//	нет
//
// Возвращаемое значение:
//	Тип: выборка из рез запроса
//
Функция ПолучитьИзменения_Документ_РеализацияТоваровУслуг()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Ссылка,
	|	РеализацияТоваровУслуг.ВерсияДанных КАК ВерсияДанных,
	|	РеализацияТоваровУслуг.ПометкаУдаления КАК ПометкаУдаления,
	|	РеализацияТоваровУслуг.Номер КАК Номер,
	|	РеализацияТоваровУслуг.Дата КАК Дата,
	|	РеализацияТоваровУслуг.Проведен КАК Проведен,
	|	РеализацияТоваровУслуг.АдресДоставки КАК АдресДоставки,
	|	РеализацияТоваровУслуг.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	РеализацияТоваровУслуг.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	РеализацияТоваровУслуг.БанковскийСчетГрузоотправителя КАК БанковскийСчетГрузоотправителя,
	|	РеализацияТоваровУслуг.БанковскийСчетГрузополучателя КАК БанковскийСчетГрузополучателя,
	|	РеализацияТоваровУслуг.Валюта КАК Валюта,
	|	РеализацияТоваровУслуг.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	РеализацияТоваровУслуг.Грузоотправитель КАК Грузоотправитель,
	|	РеализацияТоваровУслуг.Грузополучатель КАК Грузополучатель,
	|	РеализацияТоваровУслуг.УдалитьДатаПлатежа КАК УдалитьДатаПлатежа,
	|	РеализацияТоваровУслуг.УдалитьДатаРаспоряжения КАК УдалитьДатаРаспоряжения,
	|	РеализацияТоваровУслуг.ДоверенностьВыдана КАК ДоверенностьВыдана,
	|	РеализацияТоваровУслуг.ДоверенностьДата КАК ДоверенностьДата,
	|	РеализацияТоваровУслуг.ДоверенностьЛицо КАК ДоверенностьЛицо,
	|	РеализацияТоваровУслуг.ДоверенностьНомер КАК ДоверенностьНомер,
	|	РеализацияТоваровУслуг.ЗаказКлиента КАК ЗаказКлиента,
	|	РеализацияТоваровУслуг.Организация КАК Организация,
	|	РеализацияТоваровУслуг.Контрагент КАК Контрагент,
	|	РеализацияТоваровУслуг.Менеджер КАК Менеджер,
	|	РеализацияТоваровУслуг.НалогообложениеНДС КАК НалогообложениеНДС,
	|	РеализацияТоваровУслуг.СуммаДокумента КАК СуммаДокумента,
	|	РеализацияТоваровУслуг.Партнер КАК Партнер,
	|	РеализацияТоваровУслуг.Подразделение КАК Подразделение,
	|	РеализацияТоваровУслуг.Сделка КАК Сделка,
	|	РеализацияТоваровУслуг.СкидкиРассчитаны КАК СкидкиРассчитаны,
	|	РеализацияТоваровУслуг.Склад КАК Склад,
	|	РеализацияТоваровУслуг.Согласован КАК Согласован,
	|	РеализацияТоваровУслуг.Соглашение КАК Соглашение,
	|	РеализацияТоваровУслуг.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	РеализацияТоваровУслуг.Комментарий КАК Комментарий,
	|	РеализацияТоваровУслуг.ФормаОплаты КАК ФормаОплаты,
	|	РеализацияТоваровУслуг.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	РеализацияТоваровУслуг.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	РеализацияТоваровУслуг.Касса КАК Касса,
	|	РеализацияТоваровУслуг.Отпустил КАК Отпустил,
	|	РеализацияТоваровУслуг.ОтпустилДолжность КАК ОтпустилДолжность,
	|	РеализацияТоваровУслуг.РеализацияПоЗаказам КАК РеализацияПоЗаказам,
	|	РеализацияТоваровУслуг.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	РеализацияТоваровУслуг.КартаЛояльности КАК КартаЛояльности,
	|	РеализацияТоваровУслуг.Договор КАК Договор,
	|	РеализацияТоваровУслуг.Основание КАК Основание,
	|	РеализацияТоваровУслуг.Статус КАК Статус,
	|	РеализацияТоваровУслуг.Автор КАК Автор,
	|	РеализацияТоваровУслуг.УдалитьСуммаПредоплаты КАК УдалитьСуммаПредоплаты,
	|	РеализацияТоваровУслуг.УдалитьСуммаПредоплатыЗаТару КАК УдалитьСуммаПредоплатыЗаТару,
	|	РеализацияТоваровУслуг.СпособДоставки КАК СпособДоставки,
	|	РеализацияТоваровУслуг.ЗонаДоставки КАК ЗонаДоставки,
	|	РеализацияТоваровУслуг.АдресДоставкиЗначенияПолей КАК АдресДоставкиЗначенияПолей,
	|	РеализацияТоваровУслуг.ПеревозчикПартнер КАК ПеревозчикПартнер,
	|	РеализацияТоваровУслуг.ВремяДоставкиС КАК ВремяДоставкиС,
	|	РеализацияТоваровУслуг.ВремяДоставкиПо КАК ВремяДоставкиПо,
	|	РеализацияТоваровУслуг.АдресДоставкиПеревозчика КАК АдресДоставкиПеревозчика,
	|	РеализацияТоваровУслуг.АдресДоставкиПеревозчикаЗначенияПолей КАК АдресДоставкиПеревозчикаЗначенияПолей,
	|	РеализацияТоваровУслуг.ДополнительнаяИнформацияПоДоставке КАК ДополнительнаяИнформацияПоДоставке,
	|	РеализацияТоваровУслуг.КонтактноеЛицо КАК КонтактноеЛицо,
	|	РеализацияТоваровУслуг.Руководитель КАК Руководитель,
	|	РеализацияТоваровУслуг.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	РеализацияТоваровУслуг.ПорядокРасчетов КАК ПорядокРасчетов,
	|	РеализацияТоваровУслуг.ВернутьМногооборотнуюТару КАК ВернутьМногооборотнуюТару,
	|	РеализацияТоваровУслуг.ДатаВозвратаМногооборотнойТары КАК ДатаВозвратаМногооборотнойТары,
	|	РеализацияТоваровУслуг.СостояниеЗаполненияМногооборотнойТары КАК СостояниеЗаполненияМногооборотнойТары,
	|	РеализацияТоваровУслуг.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	РеализацияТоваровУслуг.ТребуетсяЗалогЗаТару КАК ТребуетсяЗалогЗаТару,
	|	РеализацияТоваровУслуг.ОснованиеДата КАК ОснованиеДата,
	|	РеализацияТоваровУслуг.ОснованиеНомер КАК ОснованиеНомер,
	|	РеализацияТоваровУслуг.ДопоставкаПоРеализации КАК ДопоставкаПоРеализации,
	|	РеализацияТоваровУслуг.ДатаПереходаПраваСобственности КАК ДатаПереходаПраваСобственности,
	|	РеализацияТоваровУслуг.ВариантОформленияПродажи КАК ВариантОформленияПродажи,
	|	РеализацияТоваровУслуг.ИдентификаторПлатежа КАК ИдентификаторПлатежа,
	|	РеализацияТоваровУслуг.ОсобыеУсловияПеревозки КАК ОсобыеУсловияПеревозки,
	|	РеализацияТоваровУслуг.ОсобыеУсловияПеревозкиОписание КАК ОсобыеУсловияПеревозкиОписание,
	|	РеализацияТоваровУслуг.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	РеализацияТоваровУслуг.КурсЧислитель КАК КурсЧислитель,
	|	РеализацияТоваровУслуг.КурсЗнаменатель КАК КурсЗнаменатель,
	|	РеализацияТоваровУслуг.УдалитьПорядокОплаты КАК УдалитьПорядокОплаты,
	|	РеализацияТоваровУслуг.ЕстьМаркируемаяПродукцияГИСМ КАК ЕстьМаркируемаяПродукцияГИСМ,
	|	РеализацияТоваровУслуг.УдалитьЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС КАК УдалитьЕстьАлкогольнаяПродукцияДляРеализацииРозницаЕГАИС,
	|	РеализацияТоваровУслуг.СуммаВзаиморасчетовПоТаре КАК СуммаВзаиморасчетовПоТаре,
	|	РеализацияТоваровУслуг.ОплатаВВалюте КАК ОплатаВВалюте,
	|	РеализацияТоваровУслуг.Курьер КАК Курьер,
	|	РеализацияТоваровУслуг.Сборщик КАК Сборщик,
	|	РеализацияТоваровУслуг.АдресДоставкиЗначение КАК АдресДоставкиЗначение,
	|	РеализацияТоваровУслуг.АдресДоставкиПеревозчикаЗначение КАК АдресДоставкиПеревозчикаЗначение,
	|	РеализацияТоваровУслуг.ВариантВыбытияМаркируемойПродукции КАК ВариантВыбытияМаркируемойПродукции,
	|	РеализацияТоваровУслуг.КлиентКонтрагент КАК КлиентКонтрагент,
	|	РеализацияТоваровУслуг.КлиентПартнер КАК КлиентПартнер,
	|	РеализацияТоваровУслуг.КлиентДоговор КАК КлиентДоговор,
	|	РеализацияТоваровУслуг.ЭтапГосконтрактаЕИС КАК ЭтапГосконтрактаЕИС,
	|	РеализацияТоваровУслуг.IT_ТребуетсяПересчетКурса КАК IT_ТребуетсяПересчетКурса,
	|	РеализацияТоваровУслуг.ФранчайзинговыйМагазин КАК ФранчайзинговыйМагазин,
	|	РеализацияТоваровУслуг.Товары.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Назначение КАК Назначение,
	|		Упаковка КАК Упаковка,
	|		КоличествоУпаковок КАК КоличествоУпаковок,
	|		Количество КАК Количество,
	|		ВидЦены КАК ВидЦены,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		СуммаСНДС КАК СуммаСНДС,
	|		КодСтроки КАК КодСтроки,
	|		СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|		СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
	|		ПроцентРучнойСкидки КАК ПроцентРучнойСкидки,
	|		ПроцентАвтоматическойСкидки КАК ПроцентАвтоматическойСкидки,
	|		КлючСвязи КАК КлючСвязи,
	|		Склад КАК Склад,
	|		СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		ЗаказКлиента КАК ЗаказКлиента,
	|		СрокПоставки КАК СрокПоставки,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		Серия КАК Серия,
	|		АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|		КодТНВЭД КАК КодТНВЭД,
	|		ОбъектРасчетов КАК ОбъектРасчетов,
	|		Подразделение КАК Подразделение,
	|		НоменклатураПартнера КАК НоменклатураПартнера
	|	) КАК Товары,
	|	РеализацияТоваровУслуг.СкидкиНаценки.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		КлючСвязи КАК КлючСвязи,
	|		СкидкаНаценка КАК СкидкаНаценка,
	|		Сумма КАК Сумма,
	|		НапомнитьПозже КАК НапомнитьПозже
	|	) КАК СкидкиНаценки,
	|	РеализацияТоваровУслуг.ВидыЗапасов.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		ВидЗапасов КАК ВидЗапасов,
	|		НомерГТД КАК НомерГТД,
	|		Упаковка КАК Упаковка,
	|		КоличествоУпаковок КАК КоличествоУпаковок,
	|		Количество КАК Количество,
	|		КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
	|		СуммаСНДС КАК СуммаСНДС,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		ЗаказКлиента КАК ЗаказКлиента,
	|		СуммаРучнойСкидки КАК СуммаРучнойСкидки,
	|		СуммаАвтоматическойСкидки КАК СуммаАвтоматическойСкидки,
	|		АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|		Цена КАК Цена,
	|		ВидЗапасовПолучателя КАК ВидЗапасовПолучателя,
	|		ОбъектРасчетов КАК ОбъектРасчетов,
	|		КодТНВЭД КАК КодТНВЭД
	|	) КАК ВидыЗапасов,
	|	РеализацияТоваровУслуг.ДополнительныеРеквизиты.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Свойство КАК Свойство,
	|		Значение КАК Значение,
	|		ТекстоваяСтрока КАК ТекстоваяСтрока
	|	) КАК ДополнительныеРеквизиты,
	|	РеализацияТоваровУслуг.РасшифровкаПлатежа.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		УдалитьЗаказ КАК УдалитьЗаказ,
	|		Сумма КАК Сумма,
	|		ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		ОбъектРасчетов КАК ОбъектРасчетов
	|	) КАК РасшифровкаПлатежа,
	|	РеализацияТоваровУслуг.Серии.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Серия КАК Серия,
	|		Количество КАК Количество,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		Назначение КАК Назначение,
	|		Склад КАК Склад
	|	) КАК Серии,
	|	РеализацияТоваровУслуг.ЭтапыГрафикаОплаты.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Заказ КАК Заказ,
	|		СверхЗаказа КАК СверхЗаказа,
	|		ВариантОплаты КАК ВариантОплаты,
	|		ДатаПлатежа КАК ДатаПлатежа,
	|		Сдвиг КАК Сдвиг,
	|		СуммаПлатежа КАК СуммаПлатежа,
	|		ПроцентПлатежа КАК ПроцентПлатежа,
	|		СуммаЗалогаЗаТару КАК СуммаЗалогаЗаТару,
	|		ПроцентЗалогаЗаТару КАК ПроцентЗалогаЗаТару,
	|		СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		СуммаВзаиморасчетовПоТаре КАК СуммаВзаиморасчетовПоТаре,
	|		ОбъектРасчетов КАК ОбъектРасчетов,
	|		ВариантОтсчета КАК ВариантОтсчета
	|	) КАК ЭтапыГрафикаОплаты,
	|	РеализацияТоваровУслуг.ШтрихкодыУпаковок.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ШтрихкодУпаковки КАК ШтрихкодУпаковки,
	|		ЧастичноеВыбытиеКоличество КАК ЧастичноеВыбытиеКоличество,
	|		ЧастичноеВыбытиеВариантУчета КАК ЧастичноеВыбытиеВариантУчета,
	|		ЧастичноеВыбытиеНоменклатура КАК ЧастичноеВыбытиеНоменклатура,
	|		ЧастичноеВыбытиеХарактеристика КАК ЧастичноеВыбытиеХарактеристика
	|	) КАК ШтрихкодыУпаковок
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.Изменения КАК РеализацияТоваровУслугИзменения
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ПО РеализацияТоваровУслугИзменения.Ссылка = РеализацияТоваровУслуг.Ссылка
	|ГДЕ
	|	РеализацияТоваровУслугИзменения.Узел = &НужныйУзелПланаОбмена";		
	
	Запрос.УстановитьПараметр("НужныйУзелПланаОбмена", мУзел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции


// Выбирает зарегистрированные к обмену объекты
//
// Параметры:
//	нет
//
// Возвращаемое значение:
//	Тип: выборка из рез запроса
//
Функция ПолучитьИзменения_Документ_ВозвратТоваровОтКлиента()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратТоваровОтКлиента.Ссылка КАК Ссылка,
	|	ВозвратТоваровОтКлиента.ВерсияДанных КАК ВерсияДанных,
	|	ВозвратТоваровОтКлиента.ПометкаУдаления КАК ПометкаУдаления,
	|	ВозвратТоваровОтКлиента.Номер КАК Номер,
	|	ВозвратТоваровОтКлиента.Дата КАК Дата,
	|	ВозвратТоваровОтКлиента.Проведен КАК Проведен,
	|	ВозвратТоваровОтКлиента.Организация КАК Организация,
	|	ВозвратТоваровОтКлиента.Партнер КАК Партнер,
	|	ВозвратТоваровОтКлиента.Соглашение КАК Соглашение,
	|	ВозвратТоваровОтКлиента.Сделка КАК Сделка,
	|	ВозвратТоваровОтКлиента.Валюта КАК Валюта,
	|	ВозвратТоваровОтКлиента.СуммаДокумента КАК СуммаДокумента,
	|	ВозвратТоваровОтКлиента.Склад КАК Склад,
	|	ВозвратТоваровОтКлиента.ЦенаВключаетНДС КАК ЦенаВключаетНДС,
	|	ВозвратТоваровОтКлиента.Подразделение КАК Подразделение,
	|	ВозвратТоваровОтКлиента.Менеджер КАК Менеджер,
	|	ВозвратТоваровОтКлиента.Комментарий КАК Комментарий,
	|	ВозвратТоваровОтКлиента.ДокументРеализации КАК ДокументРеализации,
	|	ВозвратТоваровОтКлиента.НалогообложениеНДС КАК НалогообложениеНДС,
	|	ВозвратТоваровОтКлиента.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВозвратТоваровОтКлиента.ЧекККМ КАК ЧекККМ,
	|	ВозвратТоваровОтКлиента.ЗаявкаНаВозвратТоваровОтКлиента КАК ЗаявкаНаВозвратТоваровОтКлиента,
	|	ВозвратТоваровОтКлиента.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	ВозвратТоваровОтКлиента.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	ВозвратТоваровОтКлиента.ВыданыДенежныеСредства КАК ВыданыДенежныеСредства,
	|	ВозвратТоваровОтКлиента.НомерРасходногоКассовогоОрдера КАК НомерРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтКлиента.ДатаРасходногоКассовогоОрдера КАК ДатаРасходногоКассовогоОрдера,
	|	ВозвратТоваровОтКлиента.ВозвратПорчи КАК ВозвратПорчи,
	|	ВозвратТоваровОтКлиента.Договор КАК Договор,
	|	ВозвратТоваровОтКлиента.ВидДокументаПокупателя КАК ВидДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.СерияДокументаПокупателя КАК СерияДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.НомерДокументаПокупателя КАК НомерДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.ДатаВыдачиДокументаПокупателя КАК ДатаВыдачиДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.СрокДействияДокументаПокупателя КАК СрокДействияДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.КемВыданДокументПокупателя КАК КемВыданДокументПокупателя,
	|	ВозвратТоваровОтКлиента.КодПодразделенияДокументаПокупателя КАК КодПодразделенияДокументаПокупателя,
	|	ВозвратТоваровОтКлиента.ДатаРожденияПокупателя КАК ДатаРожденияПокупателя,
	|	ВозвратТоваровОтКлиента.Покупатель КАК Покупатель,
	|	ВозвратТоваровОтКлиента.ПричинаВозврата КАК ПричинаВозврата,
	|	ВозвратТоваровОтКлиента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ВозвратТоваровОтКлиента.УдалитьРуководитель КАК УдалитьРуководитель,
	|	ВозвратТоваровОтКлиента.ВозвратПереданнойМногооборотнойТары КАК ВозвратПереданнойМногооборотнойТары,
	|	ВозвратТоваровОтКлиента.СостояниеЗаполненияМногооборотнойТары КАК СостояниеЗаполненияМногооборотнойТары,
	|	ВозвратТоваровОтКлиента.ВидыЗапасовУказаныВручную КАК ВидыЗапасовУказаныВручную,
	|	ВозвратТоваровОтКлиента.ПредусмотренЗалогЗаТару КАК ПредусмотренЗалогЗаТару,
	|	ВозвратТоваровОтКлиента.СпособКомпенсации КАК СпособКомпенсации,
	|	ВозвратТоваровОтКлиента.ПорядокРасчетов КАК ПорядокРасчетов,
	|	ВозвратТоваровОтКлиента.КонтактноеЛицо КАК КонтактноеЛицо,
	|	ВозвратТоваровОтКлиента.ПокупательНеПлательщикНДС КАК ПокупательНеПлательщикНДС,
	|	ВозвратТоваровОтКлиента.ДовозвратПоВозврату КАК ДовозвратПоВозврату,
	|	ВозвратТоваровОтКлиента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВозвратТоваровОтКлиента.Контрагент КАК Контрагент,
	|	ВозвратТоваровОтКлиента.УдалитьПорядокОплаты КАК УдалитьПорядокОплаты,
	|	ВозвратТоваровОтКлиента.ЕстьМаркируемаяПродукцияГИСМ КАК ЕстьМаркируемаяПродукцияГИСМ,
	|	ВозвратТоваровОтКлиента.ВариантПриемкиТоваров КАК ВариантПриемкиТоваров,
	|	ВозвратТоваровОтКлиента.ОплатаВВалюте КАК ОплатаВВалюте,
	|	ВозвратТоваровОтКлиента.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ВозвратТоваровОтКлиента.Автор КАК Автор,
	|	ВозвратТоваровОтКлиента.НаименованиеВходящегоДокумента КАК НаименованиеВходящегоДокумента,
	|	ВозвратТоваровОтКлиента.ДатаПоступления КАК ДатаПоступления,
	|	ВозвратТоваровОтКлиента.КлиентКонтрагент КАК КлиентКонтрагент,
	|	ВозвратТоваровОтКлиента.КлиентПартнер КАК КлиентПартнер,
	|	ВозвратТоваровОтКлиента.КлиентДоговор КАК КлиентДоговор,
	|	ВозвратТоваровОтКлиента.IT_КурсВзаиморасчетов КАК IT_КурсВзаиморасчетов,
	|	ВозвратТоваровОтКлиента.IT_КратностьВзаиморасчетов КАК IT_КратностьВзаиморасчетов,
	|	ВозвратТоваровОтКлиента.IT_ТребуетсяПересчетКурса КАК IT_ТребуетсяПересчетКурса,
	|	ВозвратТоваровОтКлиента.Товары.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Номенклатура КАК Номенклатура,
	|		НоменклатураОприходование КАК НоменклатураОприходование,
	|		Характеристика КАК Характеристика,
	|		ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		Упаковка КАК Упаковка,
	|		КоличествоУпаковок КАК КоличествоУпаковок,
	|		Количество КАК Количество,
	|		КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		Цена КАК Цена,
	|		УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
	|		Сумма КАК Сумма,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		СуммаСНДС КАК СуммаСНДС,
	|		КодСтроки КАК КодСтроки,
	|		Порча КАК Порча,
	|		СтатусУказанияСерий КАК СтатусУказанияСерий,
	|		ДокументРеализации КАК ДокументРеализации,
	|		Серия КАК Серия,
	|		АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		НоменклатураНабора КАК НоменклатураНабора,
	|		ХарактеристикаНабора КАК ХарактеристикаНабора,
	|		АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|		Штрихкод КАК Штрихкод,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|		Себестоимость КАК Себестоимость,
	|		СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|		СебестоимостьРегл КАК СебестоимостьРегл,
	|		СебестоимостьПР КАК СебестоимостьПР,
	|		СебестоимостьВР КАК СебестоимостьВР,
	|		ВидЦеныСебестоимости КАК ВидЦеныСебестоимости,
	|		ДатаЗаполненияСебестоимостиПоВидуЦены КАК ДатаЗаполненияСебестоимостиПоВидуЦены,
	|		Назначение КАК Назначение,
	|		НомерГТД КАК НомерГТД
	|	) КАК Товары,
	|	ВозвратТоваровОтКлиента.ВидыЗапасов.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ВидЗапасов КАК ВидЗапасов,
	|		НомерГТД КАК НомерГТД,
	|		Количество КАК Количество,
	|		КоличествоПоРНПТ КАК КоличествоПоРНПТ,
	|		УдалитьСтавкаНДС КАК УдалитьСтавкаНДС,
	|		СуммаСНДС КАК СуммаСНДС,
	|		СтавкаНДС КАК СтавкаНДС,
	|		СуммаНДС КАК СуммаНДС,
	|		УдалитьСкладОтгрузки КАК УдалитьСкладОтгрузки,
	|		НоменклатураОприходование КАК НоменклатураОприходование,
	|		ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		ВидЗапасовОтгрузки КАК ВидЗапасовОтгрузки,
	|		ДокументРеализации КАК ДокументРеализации,
	|		ИдентификаторСтроки КАК ИдентификаторСтроки,
	|		УдалитьАналитикаУчетаПартий КАК УдалитьАналитикаУчетаПартий,
	|		Серия КАК Серия,
	|		АналитикаУчетаНоменклатуры КАК АналитикаУчетаНоменклатуры,
	|		АналитикаУчетаНаборов КАК АналитикаУчетаНаборов,
	|		Себестоимость КАК Себестоимость,
	|		СебестоимостьБезНДС КАК СебестоимостьБезНДС,
	|		СебестоимостьРегл КАК СебестоимостьРегл,
	|		СебестоимостьПР КАК СебестоимостьПР,
	|		СебестоимостьВР КАК СебестоимостьВР,
	|		СпособОпределенияСебестоимости КАК СпособОпределенияСебестоимости,
	|		АналитикаУчетаНоменклатурыОтгрузки КАК АналитикаУчетаНоменклатурыОтгрузки,
	|		КоличествоУпаковок КАК КоличествоУпаковок,
	|		Упаковка КАК Упаковка
	|	) КАК ВидыЗапасов,
	|	ВозвратТоваровОтКлиента.Серии.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Серия КАК Серия,
	|		Количество КАК Количество,
	|		Номенклатура КАК Номенклатура,
	|		Характеристика КАК Характеристика,
	|		НоменклатураОприходование КАК НоменклатураОприходование,
	|		ХарактеристикаОприходование КАК ХарактеристикаОприходование,
	|		Назначение КАК Назначение
	|	) КАК Серии,
	|	ВозвратТоваровОтКлиента.НачислениеБонусныхБаллов.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|		ДатаНачисления КАК ДатаНачисления,
	|		ДатаСписания КАК ДатаСписания,
	|		СуммаБонусныхБаллов КАК СуммаБонусныхБаллов
	|	) КАК НачислениеБонусныхБаллов,
	|	ВозвратТоваровОтКлиента.ОплатаБонуснымиБаллами.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		БонуснаяПрограммаЛояльности КАК БонуснаяПрограммаЛояльности,
	|		ДатаОплаты КАК ДатаОплаты,
	|		СуммаБонусныхБаллов КАК СуммаБонусныхБаллов
	|	) КАК ОплатаБонуснымиБаллами,
	|	ВозвратТоваровОтКлиента.ШтрихкодыУпаковок.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		ШтрихкодУпаковки КАК ШтрихкодУпаковки,
	|		ЗначениеШтрихкода КАК ЗначениеШтрихкода,
	|		ЧастичноеВыбытиеКоличество КАК ЧастичноеВыбытиеКоличество,
	|		ЧастичноеВыбытиеВариантУчета КАК ЧастичноеВыбытиеВариантУчета,
	|		ЧастичноеВыбытиеНоменклатура КАК ЧастичноеВыбытиеНоменклатура,
	|		ЧастичноеВыбытиеХарактеристика КАК ЧастичноеВыбытиеХарактеристика
	|	) КАК ШтрихкодыУпаковок,
	|	ВозвратТоваровОтКлиента.РасшифровкаПлатежа.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		УдалитьЗаказ КАК УдалитьЗаказ,
	|		Сумма КАК Сумма,
	|		ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|		СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|		ОбъектРасчетов КАК ОбъектРасчетов
	|	) КАК РасшифровкаПлатежа,
	|	ВозвратТоваровОтКлиента.ДополнительныеРеквизиты.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Свойство КАК Свойство,
	|		Значение КАК Значение,
	|		ТекстоваяСтрока КАК ТекстоваяСтрока
	|	) КАК ДополнительныеРеквизиты,
	|	ВозвратТоваровОтКлиента.УдалитьДополнительныеРеквизиты.(
	|		Ссылка КАК Ссылка,
	|		НомерСтроки КАК НомерСтроки,
	|		Свойство КАК Свойство,
	|		Значение КАК Значение,
	|		ТекстоваяСтрока КАК ТекстоваяСтрока
	|	) КАК УдалитьДополнительныеРеквизиты
	|ИЗ
	|	Документ.ВозвратТоваровОтКлиента.Изменения КАК ВозвратТоваровОтКлиентаИзменения
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтКлиента КАК ВозвратТоваровОтКлиента
	|		ПО ВозвратТоваровОтКлиентаИзменения.Ссылка = ВозвратТоваровОтКлиента.Ссылка
	|ГДЕ
	|	ВозвратТоваровОтКлиентаИзменения.Узел = &НужныйУзелПланаОбмена";
	
	Запрос.УстановитьПараметр("НужныйУзелПланаОбмена", мУзел);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции




#КонецОбласти

#Область Плагины

// Собирает плагины из спр Доп. обработки в ТЗ
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция НайтиПлагиныВДопОбработках()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	спр.Ссылка КАК Ссылка,
		|	спр.ИмяОбъекта КАК ИмяОбъекта
		|ИЗ
		|	Справочник.ДополнительныеОтчетыИОбработки КАК спр
		|ГДЕ
		|	спр.ИмяОбъекта ПОДОБНО ""Плагин_RabbitMQ_экспорт%"" И спр.ПометкаУдаления = ЛОЖЬ
		|	И НЕ спр.Публикация = &ПубликацияОтключена";
		
		
	Запрос.УстановитьПараметр("ПубликацияОтключена", Перечисления.ВариантыПубликацииДополнительныхОтчетовИОбработок.Отключена);

	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса.Выгрузить();
	
КонецФункции


// Подключает плагины - обработки, формирующие json-тексты из объектов базы данных
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура Плагины() Экспорт
	
	Если ТипЗнч(Плагины) <> Тип("Структура") Тогда
		Плагины = Новый Структура;
	Иначе 
		Плагины.Очистить();
	КонецЕсли;
	
	
	// универсальный код подключения плагина
	
	ТЗ = НайтиПлагиныВДопОбработках();
	Для каждого стрк Из ТЗ Цикл

		//ключ - тип объекта МД, значение - ссылка в Доп обработках
		Ключ = Сред(стрк.ИмяОбъекта, 25);
		Плагины.Вставить(Ключ, стрк.Ссылка);
		
	КонецЦикла;	
	
	
	// теперь создание объектов обработок
	
	КэшОбъектовПлагинов = Новый ТаблицаЗначений;
	КэшОбъектовПлагинов.Колонки.Добавить("ТипОбъекта");//строка в формате "Справочник_Номенклатура"
	КэшОбъектовПлагинов.Колонки.Добавить("ПлагинСсылка");//спр ссылка Доп. обработки
	КэшОбъектовПлагинов.Колонки.Добавить("ОбъектПлагина");//объект обработки
	//индексы
	КэшОбъектовПлагинов.Индексы.Добавить("ТипОбъекта");
	КэшОбъектовПлагинов.Индексы.Добавить("ПлагинСсылка");
	
	Для каждого стрк Из Плагины Цикл
		НовСтр = КэшОбъектовПлагинов.Добавить();
		НовСтр.ТипОбъекта 		= стрк.Ключ;
		НовСтр.ПлагинСсылка 	= стрк.Значение;
		НовСтр.ОбъектПлагина 	= ДополнительныеОтчетыИОбработки.ОбъектВнешнейОбработки(стрк.Значение);
	КонецЦикла;
	
		
КонецПроцедуры


// Ищет плагин для указанного типа объекта в кэше - ТЗ "КэшОбъектовПлагинов"
// Параметры:
//	ТипОбъекта 	- строка - это не ТипЗнч()! а вот так: Объект.Метаданные().ПолноеИмя() - "Справочник.ВидыЦен"
//	Плагин - объект обработки - возвращаемый параметр
//
// Возвращаемое значение:
//	Тип: Булево. Истина в случае успеха
//
Функция НайтиПлагин(Знач ТипОбъекта, Плагин = Неопределено)
	
	ТипОбъекта = СтрЗаменить(ТипОбъекта, ".", "_");
	
	Рез = КэшОбъектовПлагинов.Найти(ТипОбъекта, "ТипОбъекта");
	Если НЕ Рез = Неопределено Тогда
		Плагин = Рез.ОбъектПлагина;
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
	
КонецФункции


#КонецОбласти 	


#Область Тесты


// какое-то легаси, для примера
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
Процедура ТЕСТ() Экспорт


	ИмяТочкиОбмена = "data";
	ИмяОчереди = "testroute";
	ОтправляемоеСообщение = "Test message";
	ОтветноеСообщение = ""; 
	ТегСообщения = 0;

	
	Если НЕ ПодключитьВнешнююКомпоненту("ОбщийМакет.PinkRabbitMQ64", "BITERP", ТипВнешнейКомпоненты.Native) Тогда
		ВызватьИсключение "Ошибка подключения PinkRabbitMQ.dll";
	КонецЕсли;
	
	Клиент  = Новый("AddIn.BITERP.PinkRabbitMQ3");

    Коннект = Константы.ксп_АктивныйСерверRabbitMQ.Получить();
	
	server = Коннект.server;                                                              
	port = Коннект.port;
	username = Коннект.username;
	password = Коннект.password;
	vhost = Коннект.vhost;
	
	Попытка
		Клиент.Connect(server, port, username, password, vhost);
		Клиент.DeclareExchange(ИмяТочкиОбмена, "topic", Ложь, Истина, Ложь);
		Клиент.DeclareQueue(ИмяОчереди, Ложь, Ложь, Ложь, Ложь);
		Клиент.BindQueue(ИмяОчереди, ИмяТочкиОбмена, "#" + ИмяОчереди + "#");
	Исключение
        т = Клиент.GetLastError();
		Клиент = Неопределено;
		ВызватьИсключение т;
	КонецПопытки;
	
	Попытка
	  	Клиент.BasicPublish(ИмяТочкиОбмена, "#" + ИмяОчереди + "#", ОтправляемоеСообщение, 0, Ложь);
	Исключение
        т = Клиент.GetLastError();
		Клиент = Неопределено;
		ВызватьИсключение т;
	КонецПопытки;
	
	Попытка
	    Потребитель = Клиент.BasicConsume(ИмяОчереди, "", Истина, Ложь, 0);
	    Пока Клиент.BasicConsumeMessage("", ОтветноеСообщение, ТегСообщения, 5000) Цикл
	        Клиент.BasicAck(ТегСообщения);
	        //Сообщить("Успешно! Из очереди прочитано сообщение " + ОтветноеСообщение);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Успешно! Из очереди прочитано message: "+ОтветноеСообщение+"'");
			Сообщение.Поле = "";
			//Сообщение.УстановитьДанные();
			Сообщение.Сообщить();
	        ОтветноеСообщение = ""; // Обнуляем, чтобы избежать утечку памяти
	        ТегСообщения = 0; // Обнуляем, чтобы избежать утечку памяти
	    КонецЦикла;
	    Клиент.BasicCancel(Потребитель);
		Клиент = Неопределено;
	Исключение
	    Сообщить(Клиент.GetLastError());
		Клиент = Неопределено;
	КонецПопытки;	
КонецПроцедуры


// для теста
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция СформироватьJsonСправочникНоменклатура(НоменклатураСсылка) Экспорт

	Плагины();
	
	ТипОбъекта = НоменклатураСсылка.Метаданные().ПолноеИмя();
	
	// найти плагин
	Плагин = Неопределено;
	Успешно = НайтиПлагин(ТипОбъекта, Плагин);
	Если НЕ Успешно Тогда
		ВызватьИсключение "Для типа данных <"+ТипОбъекта+"> нет доп. обработки формирования json для экспорта в RabbitMQ!";
	КонецЕсли;
	
	//ОбъектПлагина = ДополнительныеОтчетыИОбработки.ОбъектВнешнейОбработки(Плагин);
	json = Плагин.ВыгрузитьОбъект(НоменклатураСсылка);
	
	Возврат json;
	
КонецФункции

#КонецОбласти 	


// Описание_метода
//
// Параметры:
//	Параметр1 	- Тип1 - 
//
// Возвращаемое значение:
//	Тип: Тип_значения
//
Функция getVersion() экспорт

	_п = СведенияОВнешнейОбработке();
	Возврат _п.Версия;
	
КонецФункции



/////////////////////////////////////////////////////////////////////////////////////////////





ИмяСобытияЖР = "Экспорт_в_RabbitMQ";
